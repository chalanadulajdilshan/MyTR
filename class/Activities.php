<?php/* * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates * and open the template in the editor. *//** * Description of activities * * @author Chalana Dulaj */class Activities {    public $id;    public $title;    public $location;    public $image_name;    public $short_description;    public $description;    public $map_code;    public $location_highlight;    public $queue;    public function __construct($id) {        if ($id) {            $query = "SELECT * FROM `activities` WHERE `id`=" . $id;            $db = new Database();            $result = mysqli_fetch_array($db->readQuery($query));            $this->id = $result['id'];            $this->title = $result['title'];            $this->location = $result['location'];            $this->image_name = $result['image_name'];            $this->short_description = $result['short_description'];            $this->description = $result['description'];            $this->map_code = $result['map_code'];            $this->location_highlight = $result['location_highlight'];            $this->queue = $result['queue'];            return $this;        }    }    public function create() {        $query = "INSERT INTO `activities` (`title`,`location`,`image_name`,`short_description`,`description`,`map_code`,`location_highlight`,`queue`) VALUES  ('"                . $this->title . "','"                . $this->location . "','"                . $this->image_name . "', '"                . $this->short_description . "', '"                . $this->description . "', '"                . $this->map_code . "', '"                . $this->location_highlight . "', '"                . $this->queue . "')";        $db = new Database();        $result = $db->readQuery($query);        if ($result) {            $last_id = mysqli_insert_id();            return $this->__construct($last_id);        } else {            return FALSE;        }    }    public function all() {        $query = "SELECT * FROM `activities` ORDER BY queue ASC";        $db = new Database();        $result = $db->readQuery($query);        $array_res = array();        while ($row = mysqli_fetch_array($result)) {            array_push($array_res, $row);        }        return $array_res;    }    public function allShowPagination($page, $setLimit) {        $query = "SELECT * FROM `activities` ORDER BY id desc LIMIT " . $page . " , " . $setLimit . "";        $db = new Database();        $result = $db->readQuery($query);        $array_res = array();        while ($row = mysqli_fetch_array($result)) {            array_push($array_res, $row);        }        return $array_res;    }    public function showPagination($per_page, $page) {        $page_url = "?";        $query = "SELECT COUNT(*) as totalCount FROM `activities` ";        $db = new Database();        $result = $db->readQuery($query);        $row = mysqli_fetch_array($result);        $total = $row['totalCount'];        $adjacents = "2";        $page = ($page == 0 ? 1 : $page);        $start = ($page - 1) * $per_page;        $first = $start + 1;        $last = $start + $per_page;        $prev = $page - 1;        $next = $page + 1;        $setLastpage = ceil($total / $per_page);        $lpm1 = $setLastpage - 1;        $setPaginate = "";        $setPaginate .= "<div class='col-12 col-md-5'>";        $setPaginate .= "<div class='setPage'>Showing result $first to $last from $total</div>";        $setPaginate .= "</div>";        $setPaginate .= "<div class='col-12 col-md-7'>";        $setPaginate .= "<nav class='float-lg-right mt-10 mt-md-0'>";        if ($setLastpage > 1) {            $setPaginate .= "<ul class='setPaginate'>";            if ($page > 1) {                $setPaginate.= "<li><a href='{$page_url}page=$prev'> &laquo;</a></li>";            } else {                $setPaginate.= "<li><a class='current_page1 page'>&laquo;</a></li>";            }            if ($setLastpage < 7 + ($adjacents * 2)) {                for ($counter = 1; $counter <= $setLastpage; $counter++) {                    if ($counter == $page)                        $setPaginate.= "<li><a href='{$page_url}page=$counter'  class='current_page  '>$counter</a></li>";                    else                        $setPaginate.= "<li><a href = '{$page_url}page=$counter'>$counter</a></li>";                }            }            elseif ($setLastpage > 5 + ($adjacents * 2)) {                if ($page < 1 + ($adjacents * 2)) {                    for ($counter = 1; $counter < 4 + ($adjacents * 2); $counter++) {                        if ($counter == $page)                            $setPaginate.= "<li><a href = '{$page_url}page=$counter'>$counter</a></li>";                        else                            $setPaginate.= "<li><a href='#' class='page' page='$counter'>$counter</a></li>";                    }                    $setPaginate.= "<li class='dot'>...</li>";                    $setPaginate.= "<li><a href='{$page_url}page=$lpm1'>$lpm1</a></li>";                    $setPaginate.= "<li><a href='{$page_url}page=$setLastpage'>$setLastpage</a></li>";                }                elseif ($setLastpage - ($adjacents * 2) > $page && $page > ($adjacents * 2)) {                    $setPaginate.= "<li><a href='{$page_url}page=1'>1</a></li>";                    $setPaginate.= "<li><a href='{$page_url}page=2'>2</a></li>";                    $setPaginate.= "<li class='dot'>...</li>";                    for ($counter = $page - $adjacents; $counter <= $page + $adjacents; $counter++) {                        if ($counter == $page)                            $setPaginate.= "<li><a class='current_page page'>$counter</a></li>";                        else                            $setPaginate.= "<li><a href='{$page_url}page=$counter'>$counter</a></li>";                    }                    $setPaginate.= "<li class='dot'>..</li>";                    $setPaginate.= "<li><a href='{$page_url}page=$lpm1'>$lpm1</a></li>";                    $setPaginate.= "<li><a href='{$page_url}page=$setLastpage'>$setLastpage</a></li>";                }                else {                    $setPaginate.= "<li><a href='{$page_url}page=1'>1</a></li>";                    $setPaginate.= "<li><a href='{$page_url}page=2'>2</a></li>";                    $setPaginate.= "<li class='dot'>..</li>";                    for ($counter = $setLastpage - (2 + ($adjacents * 2)); $counter <= $setLastpage; $counter++) {                        if ($counter == $page)                            $setPaginate.= "<li><a class='current_page page'>$counter</a></li>";                        else                            $setPaginate.= "<li><a href='{$page_url}page=$counter'>$counter</a></li>";                    }                }            }            if ($page < $counter - 1) {                $setPaginate.= "<li><a href='{$page_url}page=$next'>&raquo;</a></li>";            } else {                $setPaginate.= "<li><a class='current_page1 page'>&raquo;</a></li>";            }            $setPaginate.= "</ul>\n";        }        $setPaginate .= "</nav>";        $setPaginate .= "</div>";        echo $setPaginate;    }    public function update() {        $query = "UPDATE  `activities` SET "                . "`title` ='" . $this->title . "', "                . "`location` ='" . $this->location . "', "                . "`image_name` ='" . $this->image_name . "', "                . "`short_description` ='" . $this->short_description . "', "                . "`description` ='" . $this->description . "', "                . "`map_code` ='" . $this->map_code . "', "                . "`location_highlight` ='" . $this->location_highlight . "', "                . "`queue` ='" . $this->queue . "' "                . "WHERE `id` = '" . $this->id . "'";        $db = new Database();        $result = $db->readQuery($query);        if ($result) {            return $this->__construct($this->id);        } else {            return FALSE;        }    }    public function delete() {        $this->deletePhotos();        unlink(Helper::getSitePath() . "upload/activity/" . $this->image_name);        $query = 'DELETE FROM `activities` WHERE id="' . $this->id . '"';        $db = new Database();        return $db->readQuery($query);    }    public function deletePhotos() {        $ACTIVITY_PHOTO = new ActivitiesPhoto(NULL);        $allPhotos = $ACTIVITY_PHOTO->getActivitiesPhotosById($this->id);        foreach ($allPhotos as $photo) {            $IMG = $ACTIVITY_PHOTO->image_name = $photo["image_name"];            unlink(Helper::getSitePath() . "upload/activity/gallery/" . $IMG);            unlink(Helper::getSitePath() . "upload/activity/gallery/thumb/" . $IMG);            $ACTIVITY_PHOTO->id = $photo["id"];            $ACTIVITY_PHOTO->delete();        }    }    public function arrange($key, $img) {        $query = "UPDATE `activities` SET `queue` = '" . $key . "'  WHERE id = '" . $img . "'";        $db = new Database();        $result = $db->readQuery($query);        return $result;    }    public function getActivitiesByTitle($title) {        $query = "SELECT `id` FROM `activities` WHERE `title` LIKE '" . $title . "'";        $db = new Database();        $result = mysqli_fetch_array($db->readQuery($query));        return $result['id'];    }}