<?php/* * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates * and open the template in the editor. *//** * Description of Attractions * * @author chalana */class Menu {    public $id;    public $title;    public $menu_type;    public $description;    public $price;    public $offer;    public $status;    public $queue;    public function __construct($id) {        if ($id) {            $query = "SELECT * FROM `menu` WHERE `id`=" . $id;            $db = new Database();            $result = mysqli_fetch_array($db->readQuery($query));            $this->id = $result['id'];            $this->title = $result['title'];            $this->menu_type = $result['menu_type'];            $this->description = $result['description'];            $this->price = $result['price'];                        $this->offer = $result['offer'];            $this->status = $result['status'];            $this->queue = $result['queue'];            return $this;        }    }    public function create() {        $query = "INSERT INTO `menu` (`title`,`menu_type`,`description`,`status`,`price`,`offer`,`queue`) VALUES  ('"                . $this->title . "','"                . $this->menu_type . "', '"                . $this->description . "', '"                . $this->price . "', '"                . $this->offer . "', '"                . $this->status . "', '"                . $this->queue . "')";        $db = new Database();        $result = $db->readQuery($query);        if ($result) {            return mysqli_insert_id($db->DB_CON);        } else {            return FALSE;        }    }    public function all() {        $query = "SELECT * FROM `menu` ORDER BY queue ASC";        $db = new Database();        $result = $db->readQuery($query);        $array_res = array();        while ($row = mysqli_fetch_array($result)) {            array_push($array_res, $row);        }        return $array_res;    }    public function update() {        $query = "UPDATE  `menu` SET "                . "`title` ='" . $this->title . "', "                . "`description` ='" . $this->description . "', "                . "`price` ='" . $this->price . "', "                . "`offer` ='" . $this->offer . "', "                . "`status` ='" . $this->status . "', "                . "`queue` ='" . $this->queue . "' "                . "WHERE `id` = '" . $this->id . "'";        $db = new Database();        $result = $db->readQuery($query);        if ($result) {            return $this->__construct($this->id);        } else {            return FALSE;        }    }    public function allShowPagination($page, $setLimit) {        $query = "SELECT * FROM `menu` ORDER BY id desc LIMIT " . $page . " , " . $setLimit . "";        $db = new Database();        $result = $db->readQuery($query);        $array_res = array();        while ($row = mysqli_fetch_array($result)) {            array_push($array_res, $row);        }        return $array_res;    }    public function showPagination($per_page, $page) {        $page_url = "?";        $query = "SELECT COUNT(*) as totalCount FROM `menu` ";        $db = new Database();        $result = $db->readQuery($query);        $row = mysqli_fetch_array($result);        $total = $row['totalCount'];        $adjacents = "2";        $page = ($page == 0 ? 1 : $page);        $start = ($page - 1) * $per_page;        $first = $start + 1;        $last = $start + $per_page;        $prev = $page - 1;        $next = $page + 1;        $setLastpage = ceil($total / $per_page);        $lpm1 = $setLastpage - 1;        $setPaginate = "";        $setPaginate .= "<div class='col-12 col-md-5'>";        $setPaginate .= "<div class='setPage'>Showing result $first to $last from $total</div>";        $setPaginate .= "</div>";        $setPaginate .= "<div class='col-12 col-md-7'>";        $setPaginate .= "<nav class='float-lg-right mt-10 mt-md-0'>";        if ($setLastpage > 1) {            $setPaginate .= "<ul class='setPaginate'>";            if ($page > 1) {                $setPaginate.= "<li><a href='{$page_url}page=$prev'> &laquo;</a></li>";            } else {                $setPaginate.= "<li><a class='current_page1 page'>&laquo;</a></li>";            }            if ($setLastpage < 7 + ($adjacents * 2)) {                for ($counter = 1; $counter <= $setLastpage; $counter++) {                    if ($counter == $page)                        $setPaginate.= "<li><a href='{$page_url}page=$counter'  class='current_page  '>$counter</a></li>";                    else                        $setPaginate.= "<li><a href = '{$page_url}page=$counter'>$counter</a></li>";                }            }            elseif ($setLastpage > 5 + ($adjacents * 2)) {                if ($page < 1 + ($adjacents * 2)) {                    for ($counter = 1; $counter < 4 + ($adjacents * 2); $counter++) {                        if ($counter == $page)                            $setPaginate.= "<li><a href = '{$page_url}page=$counter'>$counter</a></li>";                        else                            $setPaginate.= "<li><a href='#' class='page' page='$counter'>$counter</a></li>";                    }                    $setPaginate.= "<li class='dot'>...</li>";                    $setPaginate.= "<li><a href='{$page_url}page=$lpm1'>$lpm1</a></li>";                    $setPaginate.= "<li><a href='{$page_url}page=$setLastpage'>$setLastpage</a></li>";                }                elseif ($setLastpage - ($adjacents * 2) > $page && $page > ($adjacents * 2)) {                    $setPaginate.= "<li><a href='{$page_url}page=1'>1</a></li>";                    $setPaginate.= "<li><a href='{$page_url}page=2'>2</a></li>";                    $setPaginate.= "<li class='dot'>...</li>";                    for ($counter = $page - $adjacents; $counter <= $page + $adjacents; $counter++) {                        if ($counter == $page)                            $setPaginate.= "<li><a class='current_page page'>$counter</a></li>";                        else                            $setPaginate.= "<li><a href='{$page_url}page=$counter'>$counter</a></li>";                    }                    $setPaginate.= "<li class='dot'>..</li>";                    $setPaginate.= "<li><a href='{$page_url}page=$lpm1'>$lpm1</a></li>";                    $setPaginate.= "<li><a href='{$page_url}page=$setLastpage'>$setLastpage</a></li>";                }                else {                    $setPaginate.= "<li><a href='{$page_url}page=1'>1</a></li>";                    $setPaginate.= "<li><a href='{$page_url}page=2'>2</a></li>";                    $setPaginate.= "<li class='dot'>..</li>";                    for ($counter = $setLastpage - (2 + ($adjacents * 2)); $counter <= $setLastpage; $counter++) {                        if ($counter == $page)                            $setPaginate.= "<li><a class='current_page page'>$counter</a></li>";                        else                            $setPaginate.= "<li><a href='{$page_url}page=$counter'>$counter</a></li>";                    }                }            }            if ($page < $counter - 1) {                $setPaginate.= "<li><a href='{$page_url}page=$next'>&raquo;</a></li>";            } else {                $setPaginate.= "<li><a class='current_page1 page'>&raquo;</a></li>";            }            $setPaginate.= "</ul>\n";        }        $setPaginate .= "</nav>";        $setPaginate .= "</div>";        echo $setPaginate;    }    public function getMenuByRestaurants($id) {        $query = "SELECT * FROM `menu` WHERE `menu_type`= $id ORDER BY queue ASC";        $db = new Database();        $result = $db->readQuery($query);        $array_res = array();        while ($row = mysqli_fetch_array($result)) {            array_push($array_res, $row);        }        return $array_res;    }    public function delete() {        $this->deletePhotos();        unlink(Helper::getSitePath() . "upload/menu/" . $this->menu_type);        $query = 'DELETE FROM `menu` WHERE id="' . $this->id . '"';        $db = new Database();        return $db->readQuery($query);    }    public function deletePhotos() {        $ATTRACTION_PHOTO = new AttractionPhoto(NULL);        $allPhotos = $ATTRACTION_PHOTO->getAttractionPhotosById($this->id);        foreach ($allPhotos as $photo) {            $IMG = $ATTRACTION_PHOTO->menu_type = $photo["menu_type"];            unlink(Helper::getSitePath() . "upload/menu/gallery/" . $IMG);            unlink(Helper::getSitePath() . "upload/menu/gallery/thumb/" . $IMG);            $ATTRACTION_PHOTO->id = $photo["id"];            $ATTRACTION_PHOTO->delete();        }    }    public function arrange($key, $img) {        $query = "UPDATE `menu` SET `queue` = '" . $key . "'  WHERE id = '" . $img . "'";        $db = new Database();        $result = $db->readQuery($query);        return $result;    }}